name: Deploy CraftCMS

on:
  workflow_call:
    inputs:
      securitygroup:
        required: true
        type: string
      application-archive:
        required: true
        type: string
      application-env:
        required: false
        type: string
      application-vhost:
        required: false
        type: string
      server:
        required: true
        type: string
      context:
        required: true
        type: string
      owner:
        type: string
        default: 'nobody'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk }}
          distribution: 'adopt'
          overwrite-settings: false
      - name: Build with Maven
        run: mvn -B -Dmaven.test.skip ${{ inputs.goals }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACTIONS_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACTIONS_AWS_ACCESS_SECRET }}
          aws-region: eu-north-1
      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Whitelist runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ inputs.securitygroup }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy to server
        run: |
          echo "${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key ${{ inputs.application-archive }} actions@${{ inputs.server }}:work/${{ inputs.context }}.zip || exit 1
          DEPLOY_ARGS="-n ${{ inputs.context }} -a work/${{ inputs.context }}.zip"
          if [ -n "${{ inputs.application-env }}" ]; then
            scp -o StrictHostKeyChecking=no -i private_key ${{ inputs.application-env }} actions@${{ inputs.server }}:work/${{ inputs.context }}.yml || exit 1
            DEPLOY_ARGS="$DEPLOY_ARGS -e work/${{ inputs.context }}.yml"
          fi
          if [ -n "${{ inputs.application-vhost }}" ]; then
            scp -o StrictHostKeyChecking=no -i private_key ${{ inputs.application-vhost }} actions@${{ inputs.server }}:work/${{ inputs.context }}.conf || exit 1
            DEPLOY_ARGS="$DEPLOY_ARGS -v work/${{ inputs.context }}.conf"
          fi
          ssh -o StrictHostKeyChecking=no -i private_key actions@${{ inputs.server }} "~/deploy-craft-2025 $DEPLOY_ARGS" || exit 1
      - name: Revoke runner IP address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ inputs.securitygroup }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32